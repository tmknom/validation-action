name: Validation
description: |
  This action validates the input values against formats, patterns, ranges, character sets, and other user-defined rules.
  It supports a variety of validations, including:

  - **Character validation**: Checks if input uses specific character sets like ASCII, digits, or alphanumeric characters
  - **Range validation**: Verifies that values fall within specified numerical or date ranges
  - **Pattern matching**: Validates formats such as email addresses, URLs, or semantic versions

  This action is ideal for Composite Actions, Reusable Workflows, and standard workflows in GitHub Actions.
  It ensures data consistency across various use cases.

  ## Usage

  ```yaml
    steps:
      - name: Validation
        uses: tmknom/validation-action@v0
        with:
          value: foo
          not-empty: true
  ```

inputs:
  value:
    required: true
    description: The value to validate.
  not-empty:
    required: false
    description: Validates whether the input value is not empty.
  digit:
    required: false
    description: Validates whether the input value contains only digits (0-9).
  alpha:
    required: false
    description: Validates whether the input value contains only English letters (a-zA-Z).
  alphanumeric:
    required: false
    description: Validates whether the input value contains only English letters and digits (a-zA-Z0-9).
  ascii:
    required: false
    description: Validates whether the input value contains only ASCII characters.
  printable-ascii:
    required: false
    description: Validates whether the input value contains only printable ASCII characters.
  exact-length:
    required: false
    description: Validates whether the input value's length is exactly equal to the specified number.
  min-length:
    required: false
    description: Validates whether the input value's length is greater than or equal to the specified minimum.

runs:
  using: composite

  steps:
    - name: Install valid
      env:
        VERSION: v0.2.1
        BASE_URL: https://github.com/tmknom/valid/releases/download
      run: |
        echo "::group::Install valid"
        set -x
        url="${BASE_URL}/${VERSION}/valid_Linux_x86_64.tar.gz"
        bin_path="${RUNNER_TEMP}/${GITHUB_ACTION}/bin"
        mkdir -p "${bin_path}"

        curl -sSL -o "${bin_path}/valid.tar.gz" "${url}"
        tar -zxvf "${bin_path}/valid.tar.gz" -C "${bin_path}"
        echo "${bin_path}" >> "${GITHUB_PATH}"
        echo "::endgroup::"
      shell: bash

    - name: Run valid
      env:
        VALUE: ${{ inputs.value }}
        NOT_EMPTY: ${{ inputs.not-empty }}
        DIGIT: ${{ inputs.digit }}
        ALPHA: ${{ inputs.alpha }}
        ALPHANUMERIC: ${{ inputs.alphanumeric }}
        ASCII: ${{ inputs.ascii }}
        PRINTABLE_ASCII: ${{ inputs.printable-ascii }}
        EXACT_LENGTH: ${{ inputs.exact-length }}
        MIN_LENGTH: ${{ inputs.min-length }}
      run: |
        echo "::group::Run valid"
        set -x
        flags=(--value "${VALUE}")

        if [[ "${NOT_EMPTY}" != "" && "${NOT_EMPTY}" != "false" ]]; then
          flags+=(--not-empty)
        fi

        if [[ "${DIGIT}" != "" && "${DIGIT}" != "false" ]]; then
          flags+=(--digit)
        fi

        if [[ "${ALPHA}" != "" && "${ALPHA}" != "false" ]]; then
          flags+=(--alpha)
        fi

        if [[ "${ALPHANUMERIC}" != "" && "${ALPHANUMERIC}" != "false" ]]; then
          flags+=(--alphanumeric)
        fi

        if [[ "${ASCII}" != "" && "${ASCII}" != "false" ]]; then
          flags+=(--ascii)
        fi

        if [[ "${PRINTABLE_ASCII}" != "" && "${PRINTABLE_ASCII}" != "false" ]]; then
          flags+=(--printable-ascii)
        fi

        if [[ "${EXACT_LENGTH}" != "" ]]; then
          flags+=(--exact-length "${EXACT_LENGTH}")
        fi

        if [[ "${MIN_LENGTH}" != "" ]]; then
          flags+=(--min-length "${MIN_LENGTH}")
        fi

        valid "${flags[@]}"
        echo "::endgroup::"
      shell: bash
